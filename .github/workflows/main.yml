name: "Run Tests on Reviewer Requested"
on:
  pull_request:
    types: [review_requested]

jobs:
  get-pr-commit-data:
    name: Get Latest PR Commit SHA
    runs-on: ubuntu-latest
    steps:
      - name: Get Latest PR Commit SHA Step One
        run: echo github.env - ${{ github.env }}
  tests-job:
    name: Tests Job
    runs-on: ubuntu-latest
    needs: get-pr-commit-data
    if: github.event.pull_request.requested_reviewers && contains(github.event.pull_request.requested_reviewers, 'cnocon')
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          sha: ${{ github.sha }}
      - uses: actions/setup-node@v4
        with:
          ref: ${{ github.ref }}
          sha: ${{ github.sha }}
          node-version: '20'
      - name: run npm install
        run: npm install
      - name: echo pull_request url
        run: echo pull_request url - ${{ github.event.pull_request.url }}
      - name: echo pull_request commits_url
        run: echo pull_request commits_url - ${{ github.event.pull_request.commits_url }}
      - name: echo pull_request statuses_url
        run: echo pull_request statuses_url - ${{ github.event.pull_request.statuses_url }}
      - name: echo pull_request state
        run: echo pull_request state - ${{ github.event.pull_request.state }}
      - name: echo pull_request merge_commit_sha
        run: echo pull_request merge_commit_sha - ${{ github.event.pull_request.merge_commit_sha }}
  
  other-job:
    name: Other Job
    runs-on: ubuntu-latest
    needs: [get-pr-commit-data, tests-job]
    if: always()
    steps:
      - name: get the one latest & last sha # get the last commit sha in pull_Requst
        run: echo github.sha ${{ github.sha }}
      - name: Echo job status
        run: echo Job State - ${{ needs.tests-job.result.state }}
  #       env:
  #         PRSHA: ${{ github.sha}} 
  #       run: |
  #         URL=${{ github.event.pull_request.url }}/commits
  #         echo "PRSHA=${{ github.sha }}"
  #     - name: echo PRSHA # check the lastest SHA
  #       env:
  #         PRSHA: ${{ github.sha}} 
  #       run: |
  #         echo $PRSHA
  #     - name: create the status # create the status on the lastest commit sha from pull request
  #       env:
  #         PRSHA: ${{ github.sha}}
  #       run: |
  #         curl -X POST -u  \
  #         -H "Accept: application/vnd.github+json" \
  #         -H "Authorization: Bearer ${{ secrets.REPO_ACCESS_TOKEN }}" \
  #         -H "X-GitHub-Api-Version: 2022-11-28" \
  #         https://api.github.com/repos/citybasecnocon/github-actions-testing/statuses/${{ github.sha }} \
  #         -d '{"state":${{ job.status }},"target_url":"https://api.github.com/repos/citybasecnocon/github-actions-testing/commits/${{ github.sha }}/status","description":"The build was a ${{ job.status }}!","context":${{ github.ref }}}'

  
  # # other-job:
  # #   name: Other Job
  # #   if: github.event.issue.pull_request && contains(github.event.comment.body, '/test')
  # #   runs-on: ubuntu-latest
  # #   needs: [get-pr-commit-data, tests-job]
  # #   steps:
  # #     - name: Update Commit Status to Job Status
  # #       uses: myrotvorets/set-commit-status-action@master
  # #       if: always()
  # #       with:
  # #         status: ${{ job.status }}
  # #         sha: ${{ github.sha }}
  # #         token: ${{ secrets.REPO_ACCESS_TOKEN }}